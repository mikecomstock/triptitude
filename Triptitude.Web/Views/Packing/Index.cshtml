@{
    ViewBag.Title = "Packing List Items";
    IEnumerable<Tag> tags = ViewBag.Tags;
    User currentUser = ViewBag.CurrentUser;
    var userTrip = currentUser.DefaultUserTrip;
}
@section Scripts{
    <script type="text/javascript" charset="utf-8">
        $(function () {
            var tagsList = $('.packing-list-tags');
            tagsList.masonry({ itemSelector: '.packing-list-tag' });
            $('.packing-list-items').on(TT.FastClick, '.inc, .dec', TT.Util.PL.PackingListClick).disableSelection();
            var form = $('#item-search');
            var items = $('.packing-list-item');
            var tags = $('.packing-list-tag');

            $('#item-search input').keyup(function () { setTimeout(function () { form.submit(); }, 0); });
            $('#item-search').submit(function (e) {

                e.preventDefault();
                var term = $.trim($(this).find('input').val().toLowerCase());

                items.each(function (i, element) {
                    var item = $(element);
                    var matches = item.data('item').toLowerCase().indexOf(term) != -1;
                    if (matches) TT.Util.PL.Show(item);
                    else TT.Util.PL.Hide(item);
                });

                tags.each(function (i, element) {
                    var tag = $(element);
                    var hasVisibleItems = tag.find('.packing-list-item').not('.hidden').length > 0;
                    if (hasVisibleItems) TT.Util.PL.Show(tag);
                    else TT.Util.PL.Hide(tag);
                });

                tags.each(function (i, element) {
                    var tag = $(element);
                    var matches = tag.data('name').toLowerCase().indexOf(term) != -1;
                    if (matches) {
                        TT.Util.PL.Show(tag);
                        tag.find('.packing-list-item').each(function (i, e2) {
                            TT.Util.PL.Show($(e2));
                        });
                    }
                });

                tagsList.masonry('reload');
            });
        });
    </script>
}
<div class="panel">
    <header>
        <h1>
            Packing List Items</h1>
        <div class="subtitle">
            <form id="item-search">
            <label for="term">
                Search:
            </label>
            <input type="text" class="focus" name="term" id="term" autocomplete="off" placeholder="tag or item name" />
            @*<a class="link add-to-trip" data-type="packing-list-item" href="#">+Add an Item</a>*@
            </form>
        </div>
    </header>
    <section>
        <div class="packing-list-tags fluid">
            @foreach (Tag tag in tags)
            {
                <div class="packing-list-tag" data-name="@tag.NiceName">
                    <h3>@tag.NiceName</h3>
                    <ul class="packing-list-items">
                        @foreach (Item item in tag.Items)
                        {
                            var packingItem = userTrip.Trip.PackingItemSearch(byUser: currentUser, forUser: currentUser, tag: tag.Name, item: item.Name).FirstOrDefault();
                            int quantity = packingItem == null ? 0 : packingItem.Quantity;
                            <li class="packing-list-item add-to-trip" data-type="packing-list-item" data-item="@item.Name" data-tag="@tag.Name" data-quantity="@quantity" title="Click to add to trip">
                                @item.Name
                                <div class="right">
                                    <span class="dec">-</span> <span class="quantity">@quantity</span> <span class="inc">+</span>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </section>
</div>
