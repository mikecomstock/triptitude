@{
    var trip = (Trip)ViewBag.Trip;
    var tags = (IEnumerable<Tag>)ViewBag.Tags;
    var packingListItems = (IEnumerable<PackingListItem>)ViewBag.PackingListItems;
    var uncategorizedItems = packingListItems.Where(pli => !pli.Tags.Any());

    ViewBag.Title = trip.Name + " - Packing List";
    ViewBag.ShowInSiteMap = @trip.ShowInSiteMap;
}
@Html.Action("SidePanel", "Trips", new { Trip = trip })
<div id="main-container">
    <div class="panel">
        <div class="panel-title">
            <h1>
                @ViewBag.Title
            </h1>
        </div>
        <div class="panel-content">
            @foreach (var tag in tags)
            {
                <div class="packing-list-tag-group">
                    <h3 title="@tag.Name">
                        <a href="@Url.Details(tag)">@tag.NiceName</a></h3>
                    <ul class="packing-list-items">
                        @foreach (PackingListItem pli in packingListItems.Where(pli => pli.Tags.Contains(tag)))
                        {
                            @PackingListItem(pli)
                        }
                    </ul>
                </div>
            }
            @if (uncategorizedItems.Any())
            {
                <div class="packing-list-tag-group">
                    <h3 title="uncategorized items">
                        Uncategorized Items</h3>
                    <ul class="packing-list-items">
                        @foreach (PackingListItem pli in uncategorizedItems)
                        {
                            @PackingListItem(pli)
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
</div>
@helper PackingListItem(PackingListItem pli)
    {
    <li class="packing-list-item" data-id="@pli.Id">
        <div class="name">@pli.Name</div>
        @if (!string.IsNullOrEmpty(pli.Note))
        {
            <div class="packing-list-item-note">@pli.Note</div>
        }
    </li>      
}