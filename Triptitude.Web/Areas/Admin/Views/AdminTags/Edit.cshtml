@model Triptitude.Biz.Models.Tag
@{
    ViewBag.Title = "Edit " + Model.Name;
}
<h1>
    <a href="@Url.Details(Model)">@Model.Name</a>
</h1>
<p>
    @Model.ItemTags.Count() Items | @Model.ItemTags.Select(it => it.PackingListItems).Count() Packing Lists | @Model.Activities.Count() Activities | @Model.Activities.Select(a => a.Trip).Distinct().Count() Trips
</p>
<form action="@Url.Admin("tags", "delete", new { Model.Id })">
<input type="submit" value="Delete" class="confirm-delete delete" />
</form>
<h2>
    Edit</h2>
@using (Html.BeginForm())
{
    @Html.ValidationSummary()
    @Html.HiddenFor(model => model.Id)
    @Html.LabelFor(model => model.Name)
    @Html.EditorFor(model => model.Name)
    @Html.LabelFor(model => model.ShowInSearch, "Show in Searches?")
    @Html.CheckBoxFor(model => model.ShowInSearch)
    <input type="submit" value="Save" />
}
<h2>
    Add Item</h2>
@AdminHelpers.CreateItemTag(Url, Model.Name, string.Empty)
<h2>
    Items - Not Moderated</h2>
@AdminHelpers.ItemTagTable(Url, Model.ItemTags.Where(it => !it.ModeratedOnUTC.HasValue).OrderBy(it => it.Id))
<h2>
    Items - Recently Moderated</h2>
@AdminHelpers.ItemTagTable(Url, Model.ItemTags.Where(it => it.ModeratedOnUTC.HasValue).OrderByDescending(it => it.ModeratedOnUTC))
