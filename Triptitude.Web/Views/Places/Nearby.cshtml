@{
    Place place = ViewBag.Place;
    ViewBag.Title = place.Name;
    User currentUser = ViewBag.CurrentUser;
}
@Helpers.SidePanel(Url, place)
<div id="main-container">
    <div class="panel">
        <div class="title">
            <h1>
                @ViewBag.Title
            </h1>
            <a rel="nofollow" class="add-to-trip" data-id="@place.GoogId" data-name="@place.Name" data-reference="@place.GoogReference" >+ Add to Trip</a>
        </div>
        @if (currentUser.DefaultTrip == null)
        {
            <div class="subtitle">
                <a href="@Url.CreateTrip(to: place)">Create a trip to @place.Name</a>
            </div>
        }
        <div class="panel-content">
            <h2>
                Places Near @place.Name</h2>
            <div id="mapanchor">
            </div>
            <div id="map">
            </div>
            <ul class="place-rows">
            </ul>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript" charset="utf-8">

        var infowindow;
        
        function initialize() {
            var centerOn = new google.maps.LatLng(@place.Latitude, @place.Longitude);

            var map = new google.maps.Map(document.getElementById('map'), {
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                center: centerOn,
                zoom: 14
            });

            infowindow = new google.maps.InfoWindow();
            
            var options = { location: centerOn, radius: 1000 };
            var service = new google.maps.places.PlacesService(map);
            service.search(options, function (results, status) {
                if (status == google.maps.places.PlacesServiceStatus.OK) {
                for (var i = 0; i < results.length; i++) {
                    createMarker(results[i], map);
                }
            }});
        }

        function createMarker(place, map) {
            var marker = new google.maps.Marker({ map: map, position: place.geometry.location });

            google.maps.event.addListener(marker, 'click', function () {
                var infoWindowContent = getInfoWindowContent(place);
                infowindow.setContent(infoWindowContent[0]);
                infowindow.open(map, this);
            });

            var li = $('<li></li>').appendTo('.place-rows');
            var nameLink = $('<a class="title" rel="nofollow"></a>').text(place.name).data('place', place).appendTo(li);
            nameLink.attr('href', '/places/redirect?googReference=' + place.reference + '&googId=' + place.id);
            $('<a class="add-to-trip" rel="nofollow">+ Add to Trip</a>').data('place', place).appendTo(li);
        }
        
        function getInfoWindowContent(place) {
            var content = $('<div class="info-window"></div>');
            var nameLink = $('<a class="title" rel="nofollow"></a>').text(place.name).data('place', place).appendTo(content);
            nameLink.attr('href', '/places/redirect?googReference=' + place.reference + '&googId=' + place.id);
            $('<a class="add-to-trip" rel="nofollow">+ Add to Trip</a>').data('place', place).appendTo(content);
            return content;
        };

        google.maps.event.addDomListener(window, 'load', initialize);
        
           
        var a2 = function () {
            var b = $(window).scrollTop()+90;
            var sa = $("#mapanchor");
            var d = sa.offset().top;
            var c = $("#map");
            c.width(c.width()); // fixes an overlay issue
            if (b > d) {
                var height = c.outerHeight(true);
                sa.css({ height: height + "px" });
                c.addClass('at-top');
            } else {
                if (b <= d) {
                    c.removeClass('at-top');
                    sa.css({ height: "0" });
                }
            }
        };
        $(window).scroll(a2);
        a2();
    </script>
}
